//
//  main.swift
//  flynnlint
//
//  Created by Rocco Bowling on 5/29/20.
//  Copyright Â© 2020 Rocco Bowling. All rights reserved.
//

import Foundation
import Flynn
import SourceKittenFramework

struct RemoveAutogeneratedBehavioursRule: Rule {
    let description = RuleDescription(
        identifier: "remove_old_code",
        name: "Deprecated",
        description: "Please remove deprecated FlynnLint code",
        syntaxTriggers: [ ],
        nonTriggeringExamples: [
            Example("""
                class SomeActor: Actor {
                    var safeColorable = 5
                }
                class OtherActor: SomeActor {
                    func foo() {
                        safeColorable = 15
                        self.safeColorable = 15
                    }
                }
            """),
            Example("""
                func testColor() {
                    let expectation = XCTestExpectation(description: "Protocols, extensions etc...")
                    let color = Color()
                    color.render(CGRect.zero)
                    //print(color.safeColorable._color)
                    /* print(color.safeColorable._color) */
                    /*
                     * print(color.safeColorable._color)
                     */
                    ///print(color.safeColorable._color)
                    expectation.fulfill()
                }
            """),
            Example("""
                func testArrayOfColors() {
                    let expectation = XCTestExpectation(description: "Array of actors by protocol")
                    let views: [Viewable] = Array(count: Flynn.cores) { Color() }
                    for view in views {
                        view.render(CGRect.zero)
                    }
                    expectation.fulfill()
                }
            """)
        ],
        triggeringExamples: [
            Example("""
            
            
                // MARK: - Autogenerated by FlynnLint
                // Contents of file after this marker will be overwritten as needed

                extension FindFiles {

                    @discardableResult
                    public func beFlow(_ args: FlowableArgs) -> Self {
                        unsafeSend { self._beFlow(args) }
                        return self
                    }

                }
            """)
        ]
    )

    func precheck(_ file: File) -> Bool {
        return file.contents.contains("Autogenerated by FlynnLint")
    }

    func check(_ ast: AST, _ syntax: FileSyntax, _ output: Flowable?) -> Bool {
        // Old FlynnLint would insert generated code into the source file directly.
        // SPM BuildTool FlynnLint works through extensions in another file, so if we
        // see Autogenerated by FlynnLint in a file we should let the dev know to
        // delete it.
        if let innerOffset = syntax.match(#"Autogenerated by FlynnLint"#,
                                          includeComments: true) {
            if let output = output {
                output.beFlow([error(innerOffset, syntax)])
            }
            return false
        }

        return true
    }

}
