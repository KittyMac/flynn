
import XCTest

@testable import Flynn

class StringBuilder: Actor {
    private var string: String = ""

    private func _beAppend(_ value: String) {
        self.string.append(value)
    }

    private func _beSpace() {
        self.string.append(" ")
    }

    private func _beResult(_ callback: @escaping ((String) -> Void)) {
        callback(self.string)
    }
}


// MARK: - Autogenerated by FlynnLint
// Contents of file after this marker will be overwritten as needed

extension StringBuilder {

    @discardableResult
    public func beAppend(_ value: String) -> Self {
        unsafeSend { self._beAppend(value) }
        return self
    }
    @discardableResult
    public func beSpace() -> Self {
        unsafeSend(_beSpace)
        return self
    }
    @discardableResult
    public func beResult(_ callback: @escaping ((String) -> Void)) -> Self {
        unsafeSend { self._beResult(callback) }
        return self
    }

}
