import XCTest

@testable import Flynn

class StringBuilder: Actor, Timerable {
    private var string: String = ""

    private func _beTimerFired(_ timer: Flynn.Timer, _ args: TimerArgs) {
        let value: String = args[x:0]
        string.append(value)
    }

    private func _beAppend(_ value: String) {
        string.append(value)
    }

    private func _beSpace() {
        string.append(" ")
    }

    private func _beResult(_ callback: @escaping ((String) -> Void)) {
        callback(string)
    }
}

// MARK: - Autogenerated by FlynnLint
// Contents of file after this marker will be overwritten as needed

extension StringBuilder {

    @discardableResult
    public func beTimerFired(_ timer: Flynn.Timer,
                             _ args: TimerArgs) -> Self {
        unsafeSend { [weak self] in self!._beTimerFired(timer, args) }
        return self
    }
    @discardableResult
    public func beAppend(_ value: String) -> Self {
        unsafeSend { [weak self] in self!._beAppend(value) }
        return self
    }
    @discardableResult
    public func beSpace() -> Self {
        unsafeSend(_beSpace)
        return self
    }
    @discardableResult
    public func beResult(_ callback: @escaping ((String) -> Void)) -> Self {
        unsafeSend { [weak self] in self!._beResult(callback) }
        return self
    }

}
